<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dualies</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gun=0; //0=pistol, 1=shotgun, 2=rpg 3=rifle
gunMod=0; //0=none, 1=rapid, 2=sluggish
shotspeed=0;
reload = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reload = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=obj_player.x+8;
y=obj_player.y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle=point_direction(x,y,mouse_x,mouse_y);
if (direction &lt; 180) depth = obj_player.depth + 1; else depth = obj_player.depth - 1;
//mouse wheel selection
if mouse_wheel_up()
    {
        switch(gun)
        {
            case 0:
            gun=1;
            sprite_index=spr_shotgun;
            alarm[0] = 1;
            break;
            
            case 1:
            gun=2;
            sprite_index=spr_rpg;
            alarm[0] = 1;
            break;
            
            case 2:
            gun=3;
            sprite_index=spr_rifle;
            alarm[0] = 1;
            break;
            
            case 3:
            gun=4;
            sprite_index=spr_bomb;
            alarm[0] = 1;
            break;
            
            case 4:
            gun=5;
            sprite_index=spr_chaingun;
            alarm[0] = 1
            break;
            
            case 5:
            gun=6;
            sprite_index=spr_sword;
            alarm[0] = 1
            break;
            
            case 6:
            gun=0;
            sprite_index=spr_dualies;
            alarm[0] = 1;
            break;
            
        }
    }
    
    if mouse_wheel_down()
    {
        switch(gun)
        {
            case 0:
            gun=6;
            sprite_index=spr_sword;
            alarm[0] = 1;
            break;
            
            case 1:
            gun=5;
            sprite_index=spr_chaingun;
            alarm[0] = 1;
            break;
            
            case 2:
            gun=4;
            sprite_index=spr_bomb;
            alarm[0] = 1;
            break;
            
            case 3:
            gun=3;
            sprite_index=spr_rifle;
            alarm[0] = 1;
            break;
            
            case 4:
            gun=2;
            sprite_index=spr_rpg;
            alarm[0] = 1;
            break;
            
            case 5:
            gun=0;
            sprite_index=spr_dualies;
            alarm[0] = 1;
            break;
            
            case 6:
            gun=1;
            sprite_index=spr_shotgun;
            alarm[0] = 1;
            break;
            
        }
    }
    
if mouse_check_button(mb_left) and reload = true
{
        switch(gun)
        {
            case 0:
            i=instance_create(x+8,y,obj_bullet);
            i.speed=18;
            i.direction=point_direction(x,y+random_range(-2,2),mouse_x,mouse_y);
            i.image_index=0
            i=instance_create(x-8,y,obj_bullet);
            i.speed=12+shotspeed;
            i.direction=point_direction(-x,-y+random_range(-2,2),-mouse_x,-mouse_y);
            i.image_index=0
            reload = false;
            alarm[0] = 5/global.shotMulti;
            break;
            
            case 1:
            i=instance_create(x+8,y,obj_bullet);
            i.speed=12+shotspeed;
            i.direction=point_direction(x,y,mouse_x,mouse_y);
            i.image_index=0
            j=instance_create(x+8,y,obj_bullet);
            j.speed=12+shotspeed;
            j.direction=point_direction(x,y,mouse_x,mouse_y)+9;
            j.image_index=0
            k=instance_create(x+8,y,obj_bullet);
            k.speed=12+shotspeed;
            k.direction=point_direction(x,y,mouse_x,mouse_y)-9;
            k.image_index=0
            l=instance_create(x+8,y,obj_bullet);
            l.speed=12+shotspeed;
            l.direction=point_direction(x,y,mouse_x,mouse_y)+18;
            l.image_index=0
            n=instance_create(x+8,y,obj_bullet);
            n.speed=12+shotspeed;
            n.direction=point_direction(x,y,mouse_x,mouse_y)-18;
            n.image_index=0
            reload = false;
            alarm[0] = 6/global.shotMulti;
            break;
            
            case 2:
            i=instance_create(x+8,y,obj_rocket);
            i.speed=16+shotspeed;
            i.direction=point_direction(x,y,mouse_x,mouse_y)+random_range(5,15);
            i.image_angle=i.direction;
            j=instance_create(x+8,y,obj_rocket);
            j.speed=16+shotspeed;
            j.direction=point_direction(x,y,mouse_x,mouse_y)+random_range(-5,5);
            j.image_angle=j.direction;
            k=instance_create(x+8,y,obj_rocket);
            k.speed=16+shotspeed;
            k.direction=point_direction(x,y,mouse_x,mouse_y)-random_range(5,15);
            k.image_angle=k.direction;
            reload = false;
            alarm[0] = 2/global.shotMulti;
            break;
            
            case 3:
            i=instance_create(x+8,y,obj_bigbullet);
            i.speed=50+shotspeed;
            i.direction=point_direction(x,y,mouse_x,mouse_y);
            i.image_index=0;
            alarm[0] = 2/global.shotMulti;
            reload = false;
            break;
            
            case 4:
            i=instance_create(x+8,y,obj_mine);
            i.speed=0+shotspeed;
            i.direction=point_direction(x,y,mouse_x,mouse_y);
            i.image_index=0;
            alarm[0] = 15/global.shotMulti;
            reload = false;
            break;
            
            case 5:
            i=instance_create(x+8,y,obj_bullet);
            i.speed=12+shotspeed;
            i.direction=point_direction(x,y,mouse_x,mouse_y);
            i.image_index=0
            j=instance_create(x,y,obj_bullet);
            j.speed=random_range(9,12)+shotspeed;
            j.direction=point_direction(x+random_range(-6,6),y,mouse_x,mouse_y)+random_range(-6,6);
            j.image_index=0
            k=instance_create(x,y,obj_bullet);
            k.speed=random_range(9,12)+shotspeed;
            k.direction=point_direction(x+random_range(-6,6),y,mouse_x,mouse_y)+random_range(-6,6);
            k.image_index=0;
            alarm[0] = 3/global.shotMulti;
            reload = false;
            break;
            
            case 6:
            i=instance_create(x+8,y,obj_slash);
            i.speed=9+shotspeed;
            i.direction=point_direction(x,y,mouse_x,mouse_y)+random_range(-4,4);
            i.image_angle = i.direction;//point_direction(x,y,mouse_x,mouse_y);
            image_angle = -image_angle;
            alarm[0] = 4/global.shotMulti;
            reload = false;
            break;
        }
    }
if keyboard_check_pressed(vk_space) {
    switch(gunMod)
    {
        case 0:
        gunMod = 0;
        break;
        
        case 1:
        gunMod = 1;
        break;
        
        case 2:
        gunMod = 2;
        break;
    }
}
if gunMod = 1 {
    shotspeed = 100;
}

if gunMod = 2 {
    shotspeed = -100;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
